# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run gen-docs --if-present
      continue-on-error: true
    - uses: EndBug/add-and-commit@v7 # You can change this to use a specific version
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: '["lib", "docs"]'

        # The name of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_name: Build Bot

        # The email of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_email: info@brand-boosting.de

        # Name of the branch to use, if different from the one that triggered the workflow
        # Default: the branch that triggered the run
        branch: main

        # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
        # Default: '.'
        cwd: '.'

        # The message for the commit
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'built newest version'

        # The flag used on the pull strategy. Use NO-PULL to avoid the action pulling at all.
        # Default: '--no-rebase'
        pull_strategy: '--no-rebase'

        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: true

        # The arguments for the `git rm` command (see the paragraph below for more info)
        # Default: ''
        remove: ''

        # Whether to use the --signoff option on `git commit` (only `true` and `false` are accepted)
        # Default: false
        signoff: false

        # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
        # Default: ''
        tag: ''
    - run: npm test
      continue-on-error: true
